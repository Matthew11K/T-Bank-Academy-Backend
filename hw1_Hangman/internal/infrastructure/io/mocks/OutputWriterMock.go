// Code generated by mockery v2.46.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/es-debug/backend-academy-2024-go-template/internal/domain"

	mock "github.com/stretchr/testify/mock"
)

// OutputWriter is an autogenerated mock type for the OutputWriter type
type OutputWriter struct {
	mock.Mock
}

type OutputWriter_Expecter struct {
	mock *mock.Mock
}

func (_m *OutputWriter) EXPECT() *OutputWriter_Expecter {
	return &OutputWriter_Expecter{mock: &_m.Mock}
}

// DisplayGameState provides a mock function with given fields: game
func (_m *OutputWriter) DisplayGameState(game *domain.Game) {
	_m.Called(game)
}

// OutputWriter_DisplayGameState_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DisplayGameState'
type OutputWriter_DisplayGameState_Call struct {
	*mock.Call
}

// DisplayGameState is a helper method to define mock.On call
//   - game *domain.Game
func (_e *OutputWriter_Expecter) DisplayGameState(game interface{}) *OutputWriter_DisplayGameState_Call {
	return &OutputWriter_DisplayGameState_Call{Call: _e.mock.On("DisplayGameState", game)}
}

func (_c *OutputWriter_DisplayGameState_Call) Run(run func(game *domain.Game)) *OutputWriter_DisplayGameState_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*domain.Game))
	})
	return _c
}

func (_c *OutputWriter_DisplayGameState_Call) Return() *OutputWriter_DisplayGameState_Call {
	_c.Call.Return()
	return _c
}

func (_c *OutputWriter_DisplayGameState_Call) RunAndReturn(run func(*domain.Game)) *OutputWriter_DisplayGameState_Call {
	_c.Call.Return(run)
	return _c
}

// WriteOutput provides a mock function with given fields: message
func (_m *OutputWriter) WriteOutput(message string) {
	_m.Called(message)
}

// OutputWriter_WriteOutput_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteOutput'
type OutputWriter_WriteOutput_Call struct {
	*mock.Call
}

// WriteOutput is a helper method to define mock.On call
//   - message string
func (_e *OutputWriter_Expecter) WriteOutput(message interface{}) *OutputWriter_WriteOutput_Call {
	return &OutputWriter_WriteOutput_Call{Call: _e.mock.On("WriteOutput", message)}
}

func (_c *OutputWriter_WriteOutput_Call) Run(run func(message string)) *OutputWriter_WriteOutput_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *OutputWriter_WriteOutput_Call) Return() *OutputWriter_WriteOutput_Call {
	_c.Call.Return()
	return _c
}

func (_c *OutputWriter_WriteOutput_Call) RunAndReturn(run func(string)) *OutputWriter_WriteOutput_Call {
	_c.Call.Return(run)
	return _c
}

// NewOutputWriter creates a new instance of OutputWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOutputWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *OutputWriter {
	mock := &OutputWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
